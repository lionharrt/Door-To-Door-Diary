'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRedux = require('react-redux');

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _actions = require('./actions.js');

var _selectors = require('./selectors');

var _selectors2 = _interopRequireDefault(_selectors);

var _Filter = require('./Filter');

var _Filter2 = _interopRequireDefault(_Filter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var mapStateToProps = function mapStateToProps(state, _ref) {
  var tableName = _ref.tableName;

  var selectors = (0, _selectors2.default)(tableName);
  var isInitialized = selectors.getIsInitialized(state);

  if (!isInitialized) {
    return {
      isInitialized: isInitialized
    };
  }

  return {
    isInitialized: isInitialized,
    value: selectors.getFilter(state),
    options: selectors.getFilterOptions(state),
    columns: selectors.getColumns(state)
  };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch, _ref2) {
  var tableName = _ref2.tableName;
  return {
    onChange: function onChange(filter) {
      return dispatch((0, _actions.tableFilterChanged)(tableName, filter));
    },
    onTextChange: function onTextChange(filterText) {
      return dispatch((0, _actions.tableFilterTextChanged)(tableName, filterText));
    }
  };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(function (_ref3) {
  var columns = _ref3.columns,
      isInitialized = _ref3.isInitialized,
      otherProps = _objectWithoutProperties(_ref3, ['columns', 'isInitialized']);

  var hasFilterable = _lodash2.default.some(columns, 'filterable');
  if (!isInitialized) {
    return null;
  }
  return _react2.default.createElement(_Filter2.default, _extends({}, otherProps, { hasFilterable: hasFilterable }));
});